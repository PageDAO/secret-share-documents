import { jest, expect, test } from "@jest/globals";
import PolygonToSecretSmartContrat from "../src/SmartContract/PolygonToSecretSmartContract";
import ViemClient from "../src/SmartContract/ViemClient";
import AxelarClient from "../src/SmartContract/AxelarClient";

// Mock ISymmetricEncryptedData
const encryptedMessageMock = jest.mock(
  "../src/Encryption/ISymmetricEncryptedData",
  () => ({
    payload: [1, 2, 3], // Mock payload array
    public_key: [4, 5, 6], // Mock public_key array
  }),
  // () => ({"payload":[239,75,70,240,20,143,82,73,93,118,223,8,6,23,114,203,139,12,46,135,175,5,103,34,203,4,250,28,66,241,20,248,137,35,119,125,16,167,66,201,80,123,158,233,119,173,100,255,139,253,252,112,117,210,18,91,249,133,17,142,232,195,3,243,124,254,62,49,161,224,245,138,244,211,42,109,38,182,189,147,24,231,223,25,167,155,213,237,122,54,239,83,198,206,244,79,72,121,122,68,159,68,187,45,112,5,180,179,106,230,196,72,136,87,7,137,17,72,134,9,104,156,71,0,172,228,69,187,20,174,54,23,21,235,24,72,254,153,229,149,90,169,182,195,145,64,1,108,29,90,43,225,131,249,156,102,68,121,80,231,56,153,136,139,138,19,189,27,134,74,166,131,185,162,168,41,49,169,243,164,50,176,220,38,69,214,111,21,188,223,81,36,170,39,82,165,55,69,143,187,112,135,132,76,129,148,47,141,92,1,113,151,143,240,52,75,47,63,233,52,243,6,37,200,235,84,238,16,138,185,211,88,44,16,147,247,170,31,81,248,208,183,219,244,211,32,86,123,102,58,229,18,183,231,5,114,61,10,255,193,9,41,235,166,83,174,196,161,244,156,12,69,238,218,12,210,59,100,165,196,222,78,232,43,31,154,28,59,193,50,133,47,180,97,34,72,11,179,46,113,61,182,46,160,170,143,240,85,107,241,156,245,149,224,200,54,229,102,227,64,156,216,142,158,55,40,136,170,205,208,252,243,63,207,208,43,112,220,198,14,222,99,29,249,75,235,246,193,151,71,135,3,193,171,246,26,74,197,78,233,193,37,246,227,143,101,210,194,85,251,121,133,185,156,71,196,24,70,167,211,132,129,159,108,93,98,233,0,219,197,253,243,205,236,155,76,71,148,7,125,250,85,68,225,126,69,252,98,156,175,255,44,130,44,106,66,156,40,146,9,39,206,193,189,181,190,156,167,115,100,9,115,159,178,249,15,246,1,68,189,222,242,236,57,61,248,30,135,160,91,64,150,34,158,120,220,223,205,252,202,107,94,166,70,220,153,32,193,223,185,122,170,113,48,171,220,17,49,201,58,164,165,177,237,168,188,2,174,191,29,51,162,16,41,23,240,172,103,218,237,90,114,137,253,188,121,138,224,43,14,132,137,69,203,152,248,252,86,77,194,61,224,145,129,20,109,145,34,124,63,29,209,247,121,17,46,89,111,108,163,246,39,50,201,116,245,98,92,161,165,136,80,166,110,120,153,81,101,252,75,21,174,97,105,59,200,55,45,207,38,155,18,47,243,160,176,194,115,205,81,64,148,182,97,52,170,141,255,167,55,250,199,4,152,249,187,155,1,96,170,249,85,129,14,35,60,126,215,35,164,45,12,255,253,32,34,115,126,52,100,128,243,245,174,14,58,223,218,11,4,88,160,97,77,39,56,40,239,140,141,227,209,11,10,90,47,178,43,160,83,162,40,163,208,30,110,229,197,172,73,220,171,106,175,31,34,53,126,105,220,248,234,200,43,19,16,240,125,130,21,157,84],"public_key":[3,60,62,56,231,47,39,125,212,14,20,53,195,62,160,67,87,130,217,36,57,232,255,233,167,59,216,112,48,228,22,251,141]})
);

test("Send message from Polygon to Secret Network", async () => {
  const config = globalThis.__SECRET_DOCUMENT_CONFIG__;

  const axelarClient = new AxelarClient({
    env: config.getEnv()
  })

  const viemClient = new ViemClient({
    chain: config.getChain(config.getChainId()),
    walletConfig: config.getEvmWallet(),
    contract: config.getPolygonToSecret(),
  });

  const polygonToSecret = new PolygonToSecretSmartContrat({
    secretContract: config.getShareDocument(),
    viemClient: viemClient,
    axelarClient: axelarClient
  });

  const payload = {
    source_chain: "test-chain",
    source_address: "test-address",
    payload: encryptedMessageMock,
  };

  const response = await polygonToSecret.send(payload);

  console.log("[INFO] Send Polygon to Secret Network:", { response });

  expect(response).toBeDefined();
});
